// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  // role          Role         @default(STAFF)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @updatedAt @map("updated_at")
  boards        Board[]   @relation("UserBoards")
  tasks         Task[]    @relation("TaskAssignees")
  Board         Board[]
  Task          Task[]

  @@map("users")
}

model Board {
  id        String   @id @default(cuid())
  title     String
  members   User[]   @relation("UserBoards")
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@map("boards")
}

model Task {
  id          String     @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  priority    Priority   @default(MEDIUM)
  status      TaskStatus @default(TO_DO)
  assignees   User[]     @relation("TaskAssignees")
  boardId     String
  board       Board      @relation(fields: [boardId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  User        User?      @relation(fields: [userId], references: [id])
  userId      String?

  @@map("tasks")
}

enum TaskStatus {
  TO_DO
  DOING
  DONE
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
